import React from 'react'
import { css } from 'glamor'
import gql from 'graphql-tag'
import { compose, graphql } from 'react-apollo'
import { withRouter } from 'next/router'

import {
  Button,
  Editorial,
  Interaction,
  Loader,
  colors
} from '@project-r/styleguide'
import { ChartTitle, ChartLead, Chart } from '@project-r/styleguide/chart'

import md from 'markdown-in-js'

import Frame from '../components/Frame'
import { light as mdComponents } from '../lib/utils/mdComponents'

import { PackageItem, PackageBuffer } from '../components/Pledge/Accordion'

import { RawStatus } from '../components/CrowdfundingStatus'
import withT from '../lib/withT'

import { ListWithQuery as TestimonialList } from '../components/Testimonial/List'

import { CROWDFUNDING, STATUS_POLL_INTERVAL_MS } from '../lib/constants'
import withMe from '../lib/apollo/withMe'
import { Link, questionnaireCrowdSlug } from '../lib/routes'
import { swissTime } from '../lib/utils/format'

// Quelle ¬´Mitglieder- und Abonnementzahlen¬ª Dashboard
// Stand Verlauf Mitgliedschaften und Verlauf Monatsabonnements per 31.11.2019
// Abgerufen am 07.12.19 um 14:27
const TOTAL_NOV19 = 16799 + 1730
// Question 405 ¬´Can Quite¬ª
const TOTAL_CAN_QUIT = 12896

const END_DATE = '2020-03-31T10:00:00.000Z'

const formatDateTime = swissTime.format('%d.%m.%Y %H:%M')

const Accordion = withT(
  ({
    t,
    me,
    query,
    shouldBuyProlong,
    isReactivating,
    defaultBenefactor,
    questionnaire
  }) => {
    const [hover, setHover] = React.useState()

    return (
      <div style={{ marginTop: 10, marginBottom: 40 }}>
        <Interaction.P style={{ color: '#fff', marginBottom: 10 }}>
          <strong>So k√∂nnen Sie uns jetzt unterst√ºtzen:</strong>
        </Interaction.P>
        {shouldBuyProlong ? (
          <>
            <Link
              route='pledge'
              params={{ package: 'PROLONG', token: query.token }}
              passHref
            >
              <PackageItem
                t={t}
                dark
                crowdfundingName={CROWDFUNDING}
                name='PROLONG'
                title={isReactivating ? 'Zur√ºckkehren' : undefined}
                hover={hover}
                setHover={setHover}
                price={24000}
              />
            </Link>
            <Link
              route='pledge'
              params={{ package: 'PROLONG', price: 48000, token: query.token }}
              passHref
            >
              <PackageItem
                t={t}
                dark
                crowdfundingName={CROWDFUNDING}
                name='PROLONG-BIG'
                hover={hover}
                setHover={setHover}
                title={
                  isReactivating
                    ? 'Grossz√ºgig zur√ºckkehren'
                    : 'Grossz√ºgig verl√§ngern'
                }
                price={48000}
              />
            </Link>
            <Link
              route='pledge'
              params={{
                package: 'PROLONG',
                membershipType: 'BENEFACTOR_ABO',
                token: query.token
              }}
              passHref
            >
              <PackageItem
                t={t}
                dark
                crowdfundingName={CROWDFUNDING}
                name='PROLONG-BEN'
                hover={hover}
                setHover={setHover}
                title={defaultBenefactor ? 'G√∂nner bleiben' : 'G√∂nner werden'}
                price={100000}
              />
            </Link>
          </>
        ) : (
          <>
            {me && me.activeMembership ? (
              <Link route='pledge' params={{ package: 'ABO_GIVE' }} passHref>
                <PackageItem
                  t={t}
                  dark
                  crowdfundingName={CROWDFUNDING}
                  name='ABO_GIVE'
                  hover={hover}
                  setHover={setHover}
                  price={24000}
                />
              </Link>
            ) : (
              <>
                <Link
                  route='pledge'
                  params={{ package: 'MONTHLY_ABO' }}
                  passHref
                >
                  <PackageItem
                    t={t}
                    dark
                    crowdfundingName={CROWDFUNDING}
                    name='MONTHLY_ABO'
                    hover={hover}
                    setHover={setHover}
                    price={2200}
                  />
                </Link>
                <Link route='pledge' params={{ package: 'ABO' }} passHref>
                  <PackageItem
                    t={t}
                    dark
                    crowdfundingName={CROWDFUNDING}
                    name='ABO'
                    hover={hover}
                    setHover={setHover}
                    price={24000}
                  />
                </Link>
                <Link
                  route='pledge'
                  params={{ package: 'BENEFACTOR' }}
                  passHref
                >
                  <PackageItem
                    t={t}
                    dark
                    crowdfundingName={CROWDFUNDING}
                    name='BENEFACTOR'
                    hover={hover}
                    setHover={setHover}
                    price={100000}
                  />
                </Link>
              </>
            )}
          </>
        )}
        <Link route='pledge' params={{ package: 'DONATE' }} passHref>
          <PackageItem
            t={t}
            dark
            crowdfundingName={CROWDFUNDING}
            name='DONATE'
            title='Spenden'
            hover={hover}
            setHover={setHover}
          />
        </Link>
        <PackageBuffer />
        <br />
        <PrimaryCTA
          me={me}
          query={query}
          questionnaire={questionnaire}
          shouldBuyProlong={shouldBuyProlong}
          isReactivating={isReactivating}
          defaultBenefactor={defaultBenefactor}
          block
        />
      </div>
    )
  }
)

const PrimaryCTA = ({
  me,
  questionnaire,
  shouldBuyProlong,
  isReactivating,
  block,
  query,
  children
}) => {
  let target
  let text
  if (shouldBuyProlong) {
    target = {
      route: 'pledge',
      params: { package: 'PROLONG', token: query.token }
    }
    text = isReactivating ? 'Zur√ºckkehren' : 'Treu bleiben'
  } else if (!(me && me.activeMembership)) {
    target = {
      route: 'pledge',
      params: { package: 'ABO' }
    }
    text = 'Mitglied werden'
  } else if (
    questionnaire &&
    questionnaire.userIsEligible &&
    !questionnaire.userHasSubmitted
  ) {
    target = {
      route: 'questionnaireCrowd',
      params: { slug: questionnaireCrowdSlug }
    }
    text = 'Ich m√∂chte der Republik helfen.'
  } else {
    return null
  }
  if (children) {
    return (
      <Link {...target} passHref>
        {children}
      </Link>
    )
  }
  return (
    <Link {...target} passHref>
      <Button primary block={block}>
        {text}
      </Button>
    </Link>
  )
}

const Page = ({
  data,
  t,
  me,
  actionsLoading,
  questionnaire,
  canProlongOwn,
  isReactivating,
  defaultBenefactor,
  router: { query }
}) => {
  const meta = {
    title: 'üöÄ Cockpit',
    description: ''
  }

  return (
    <Frame meta={meta} dark>
      <Loader
        loading={data.loading || actionsLoading}
        error={data.error}
        style={{ minHeight: `calc(90vh)` }}
        render={() => {
          const { evolution } = data.membershipStats
          const lastMonth = evolution.buckets[evolution.buckets.length - 1]

          const shouldBuyProlong =
            canProlongOwn &&
            (!me ||
              (me.activeMembership &&
                new Date(me.activeMembership.endDate) <= new Date(END_DATE)))

          return (
            <>
              <div style={{ marginBottom: 60 }}>
                <RawStatus
                  t={t}
                  people
                  money
                  crowdfundingName='SURVIVE'
                  crowdfunding={{
                    endDate: END_DATE,
                    goals: [
                      {
                        people: 19000,
                        money: 220000000
                      }
                    ],
                    status: {
                      people:
                        lastMonth.active +
                        lastMonth.new +
                        lastMonth.subscriptionsRenewalPending,
                      money: data.revenueStats.surplus.total,
                      support: data.questionnaire
                        ? data.questionnaire.turnout.submitted
                        : undefined
                    }
                  }}
                />
              </div>
              {md(mdComponents)`

# Die Republik braucht Ihre Unterst√ºtzung, Ihren Mut und Ihren Einsatz, damit sie in Zukunft bestehen kann!

      `}
              <Accordion
                me={me}
                query={query}
                shouldBuyProlong={shouldBuyProlong}
                isReactivating={isReactivating}
                defaultBenefactor={defaultBenefactor}
                questionnaire={questionnaire}
              />

              {md(mdComponents)`
Seit zwei Jahren ist die Republik jetzt da ‚Äì als digitales Magazin, als Labor f√ºr den Journalismus des 21. Jahrhunderts.

Drei entscheidende Ziele haben wir uns gesetzt: eine Startfinanzierung zu finden, eine funktionierende Redaktion mit Schlagkraft aufzubauen und ein Gesch√§ftsmodell f√ºr unabh√§ngigen, werbefreien und leserfinanzierten Journalismus zu entwickeln.

Sie haben uns bis hier begleitet: mit ihrer Neugier, ihrer Unterst√ºtzung, ihrem Lob und ihrer Kritik. Daf√ºr ein grosses Danke! Ohne Sie w√§ren wir nicht hier.

Unser erstes Ziel ‚Äì  Startfinanzierung ‚Äì haben wir gemeinsam mit Ihnen und unerschrockenen Investoren erreicht. Das zweite Ziel ebenfalls: eine funktionierende Redaktion aufzubauen, die ordentlichen und immer √∂fter auch ausserordentlichen Journalismus liefert und sich weiterentwickeln will. Das dritte Ziel leider noch nicht: ein funktionierendes Gesch√§ftsmodell f√ºr werbefreien, unabh√§ngigen, leserfinanzierten Journalismus zu etablieren.

An der Notwendigkeit unseres gemeinsamen Projekts hat sich nichts ge√§ndert. Die grossen Verlage haben wenig Ideen ausser Fusionen. Und in der Politik sind Institutionen und Fakten weiter unter Beschuss.

Unsere Aufgabe ist, brauchbaren Journalismus zu machen. Einen, der die K√∂pfe klarer, das Handeln mutiger, die Entscheidungen kl√ºger macht. Und der das Gemeinsame st√§rkt: die Freiheit, den Rechtsstaat, die Demokratie.

Wir sind √ºberzeugt, dass unsere Existenz einen Unterschied machen kann. Deshalb k√§mpfen wir f√ºr die Republik.  

${(
  <PrimaryCTA
    me={me}
    query={query}
    questionnaire={questionnaire}
    shouldBuyProlong={shouldBuyProlong}
    isReactivating={isReactivating}
  >
    <Editorial.A style={{ color: colors.negative.text }}>
      K√§mpfen Sie mit?
    </Editorial.A>
  </PrimaryCTA>
)}

## Wof√ºr wir k√§mpfen

Im Prinzip funktioniert die Republik wie eine Rakete.

Zun√§chst braucht man Treibstoff. Den haben wir von Investoren und fast 14'000 Menschen beim Crowdfunding bekommen.

Dann folgen zwei Stufen:

Stufe 1: Du musst das Unternehmen in die Luft bringen. Und dort auf den richtigen Kurs. Das kann l√§nger dauern. Wir haben mehr als ein Jahr gebraucht, bis Produkt, Crew und Organisation vern√ºnftig liefen.

Stufe 2: Den stabilen Orbit erreichen. Also selbstragend werden.

Denn die Republik macht nur dann Sinn, wenn sie aus eigener Kraft √ºberlebt. Erst dann gelingt der Hack des Systems: Wenn wir eine neues Modell f√ºr den Schweizer Medienmarkt etablieren k√∂nnen. Und den Beweis liefern, dass kompromissloser Journalismus ohne Werbung funktioniert.

Doch das braucht Zeit, Nerven, frisches Kapital. 

${(
  <PrimaryCTA
    me={me}
    query={query}
    questionnaire={questionnaire}
    shouldBuyProlong={shouldBuyProlong}
    isReactivating={isReactivating}
  >
    <Editorial.A style={{ color: colors.negative.text }}>
      Sind Sie an Bord?
    </Editorial.A>
  </PrimaryCTA>
)}

## Warum jetzt gerade?

¬´Wie geht's?¬ª Diese Frage bringt uns ins Dilemma. Die Redaktion, das Unternehmen sind endlich gut aufgestellt. Alles l√§uft pr√§ziser. Noch nie hatte die gesamte Crew in der Republik so viel Schwung, Entschlossenheit und Klarheit im Kopf.

Andererseits stimmt die Rechnung nicht. Die Republik hat aktuell rund 18'600 Verlegerinnen. Das deckt mehr als 70 Prozent der Kosten. Die restlichen 30 Prozent reissen ein tiefes Loch in die Bilanz. Wir sind 2019 langsamer gewachsen als budgetiert. Das hat heftige Folgen: Bis Ende M√§rz m√ºssen wir den R√ºckstand aufholen, sonst hat die Republik keine Zukunft. Schaffen wir, die zweite Stufe der Rakete zu z√ºnden, haben wir realistische Chancen, ein tragf√§higes Gesch√§ftsmodell zu etablieren. Falls nicht, hat das noch heftigere Folgen: Dann werden wir die Republik am 31. M√§rz 2020 schliessen.

Hier einige unfreundliche Zahlen:

*   Wir haben statt wie budgetiert 8100 neue Mitglieder in diesem Jahr bisher 4000 neue Mitglieder gewonnen
*   Wir konnten 2019 neue Investoren gewinnen, F√∂rderbeitr√§ge erhalten und √ºber eine halbe Million fundraisen. Das ist wunderbar. Aber weniger als die geplante 1 Million
*   Wir konnten 10 Prozent der Kosten sparen. Doch dadurch haben wir nun wenig M√∂glichkeiten, den Aufwand ohne Schaden zu senken.

Das alles riss ein Loch von 1.5 Millionen Franken in den Betrieb. Und das ist unternehmerisch nicht mehr lange tragbar. 

Deshalb muss die Republik jetzt die zweite Stufe z√ºnden.

## Das sind unsere Ziele

Wir wollen weiterhin f√ºr Sie Journalismus machen, der Ihnen Hintergr√ºnde zur Gegenwart liefert. Daf√ºr

*   m√ºssen wir bis Ende M√§rz 19'000 Verlegerinnen an Bord haben. (Ein wenig mehr als heute.) Das ist alles andere als trivial: Wir m√ºssen jene Verleger ersetzen, die uns in den n√§chsten Monaten verlassen und noch dazu gewinnen.


*   brauchen wir bis Ende M√§rz 2,2 Millionen Franken an Investorengeldern, Spenden und F√∂rderbeitr√§gen. Davon haben wir 535'000 Franken bereits erhalten.

Erreichen wir diese beiden Ziele, haben wir die Ressourcen, unser gemeinsames Unternehmen in eine stabile Zukunft zu f√ºhren. 

Doch daf√ºr brauchen wir Sie. An Bord. Und an Deck. 

(Falls Sie √ºbrigens zu etwas noch Fragen haben, [klicken Sie hier f√ºr die Antworten](/status/faq))

`}

              <div
                {...css({
                  marginTop: 20,
                  '& text': {
                    fill: '#fff !important'
                  },
                  '& line': {
                    stroke: 'rgba(255, 255, 255, 0.4) !important'
                  },
                  '& div': {
                    color: '#fff !important'
                  }
                })}
              >
                <ChartTitle style={{ color: '#fff' }}>
                  Wie viele werden am 31. M√§rz definitiv dabei sein?
                </ChartTitle>
                <ChartLead style={{ color: '#fff' }}>
                  Anzahl bestehende, offene und neue Mitgliedschaften und
                  Monatsabos per Monatsende
                </ChartLead>
                <Chart
                  config={{
                    type: 'TimeBar',
                    color: 'action',
                    numberFormat: 's',
                    colorRange: [
                      '#FFD700',
                      '#CCAC00',
                      '#3CAD00',
                      '#2A7A00',
                      '#333333',
                      '#9970ab'
                    ],
                    x: 'date',
                    timeParse: '%Y-%m',
                    timeFormat: '%b',
                    xTicks: ['2019-12', '2020-01', '2020-02', '2020-03'],
                    height: 300,
                    padding: 55,
                    xAnnotations: [
                      {
                        x1: '2020-03',
                        x2: '2020-03',
                        label: '75% Erneuerung',
                        value:
                          TOTAL_NOV19 - TOTAL_CAN_QUIT + TOTAL_CAN_QUIT * 0.75
                      },
                      {
                        x1: '2020-03',
                        x2: '2020-03',
                        label: '50% Erneuerung',
                        value:
                          TOTAL_NOV19 - TOTAL_CAN_QUIT + TOTAL_CAN_QUIT * 0.5
                      }
                    ]
                  }}
                  values={evolution.buckets.reduce((values, month) => {
                    return values.concat([
                      {
                        date: month.label,
                        action: 'Grossz√ºgige',
                        value: String(month.activeWithDonation)
                      },
                      {
                        date: month.label,
                        action: 'Neue grossz√ºgige',
                        value: String(month.newWithDonation)
                      },
                      {
                        date: month.label,
                        action: 'Bestehende',
                        value: String(
                          month.activeWithoutDonation +
                            month.subscriptionsRenewalPending
                        )
                      },
                      {
                        date: month.label,
                        action: 'Neue',
                        value: String(month.newWithoutDonation)
                      },
                      {
                        date: month.label,
                        action: 'offen',
                        value: String(month.renewalPending)
                      }
                    ])
                  }, [])}
                />
                <Editorial.Note style={{ marginTop: 10, color: '#fff' }}>
                  Als grossz√ºgig gelten alle, die mehr als CHF 240 bezahlt
                  haben. Erneuerungsquoten basierend auf allen
                  Jahresmitgliedschaften die zwischen dem 1. Dezember und 31.
                  M√§rz erneuert werden k√∂nnten. Als offen gelten
                  Jahresmitgliedschaften wo noch keine Verl√§ngerungszahlung
                  initiiert wurde. Datenstand:{' '}
                  {formatDateTime(new Date(evolution.updatedAt))}
                </Editorial.Note>
              </div>

              {md(mdComponents)`

${(
  <PrimaryCTA
    me={me}
    query={query}
    questionnaire={questionnaire}
    shouldBuyProlong={shouldBuyProlong}
    isReactivating={isReactivating}
    defaultBenefactor={defaultBenefactor}
  >
    <Editorial.A style={{ color: colors.negative.text }}>
      Jetzt Tank f√ºllen
    </Editorial.A>
  </PrimaryCTA>
)}

## Gemeinsam sind wir weit gekommen

Abgesehen von den Finanzen war 2019 ein grossartiges Jahr. Wir sind sp√ºrbar ein St√ºck vorw√§rts gekommen. Und haben auch einige Dinge erreicht: 

*   immer wieder haben wir aussergew√∂hnlichen Journalismus gemacht. Schlagkr√§ftige Recherchen, Analysen, Reportagen und Interviews. 
*   wir haben systematisch Expertise wie Themenf√ºhrerschaft in Justiz, Digitalisierung und in Klimafragen aufgebaut
*   die Redaktion so weiter entwickelt, dass sie beides kann: schnell auf wichtige Ereignisse reagieren und Hintergrund liefern
*   einen permanenten Dialog mit Ihnen aufgebaut. Und gelernt: Die Pr√§senz der Redaktion in den Debatten ist jetzt die Regel, nicht die Ausnahme
*   wie kein anderes Medienunternehmen berichten wir so viel √ºber die eigene Arbeit und erz√§hlen √ºber die Entwicklung unseres Unternehmens.
*   haben Nachwuchs ausgebildet, ‚Äì zwar wenig, aber was f√ºr einen!
*   waren f√ºr den deutschen Grimme-Preis nominiert, gewannen den Schweizer Reporterpreis und den Start-up of the year award.
*   und haben seit knapp einem Jahr ein starkes  
    Gremium, im R√ºcken, das uns tr√§gt, unterst√ºtzt ‚Äì  
    konstruktiv kritisiert: der Genossenschaftsrat.

## Die drei Phasen der Kampagne

**Bis Ende Januar** geht es darum, quasi die Tanks von Stufe zwei auf zu f√ºllen. Wir haben drei nicht ganz einfache Dinge zu erledigen: 

1.  Dass viele Verleger best√§tigen, dass sie trotz Risiko an Bord sind.
2.  Dass m√∂glichst viele von Ihnen auf das Doppelt aufstocken ‚Äì denn der Treibstoff, der Leben in Projekte bringt, ist: Grossz√ºgikeit und Geld.
3.  Neue unerschrockene Investorinnen und Grossspender finden. (Falls Sie eine gr√∂ssere Summe investieren wollen, schreiben Sie an: ir@republik.ch)

**Im Februar** geht es darum, den Check Up vor der Z√ºndung zu machen. Wir reden mit Ihnen bei der Was-Sie-von-uns-brauchen-wenn-Sie-nicht-h√∂flich-sein-wollen-Debatte. Und arbeiten an einem neugierigeren, n√ºtzlicheren Produkt.

**Im M√§rz** z√ºndet das Triebwerk. Wir werden ein paar tausend neue Verlegerinnen gewinnen m√ºssen. Jetzt geht es um: Wachstum. 

Am 31. M√§rz ist es dann wie immer bei einer Reise mit einer Rakete: Entweder du bist explodiert oder ein grosses St√ºck weiter.

Um das Ziel von 19'000 Verlegern zu erreichen, brauchen wir Reichweite. Die k√∂nnen wir uns jedoch weder kaufen (zu teuer), noch allein mit Journalismus erarbeiten.

Wir setzen also auf unsere wichtigste Ressource: Sie. Sie ‚Äì und ihr Adressbuch, Ihr Netzwerk, Ihre Begeisterung, Ihre Skepsis. 

Wir werden eine Kampagne machen m√ºssen, in der Sie als Multiplikatoren, Botschafter, Komplizen ‚Äì nennen Sie es wie sie wollen ‚Äì eine Hauptrolle spielen. 

Unser Job dabei ist, Sie regelm√§ssig, offen und klar √ºber den Stand der Dinge zu informieren. Und ihnen die besten Werkzeuge in die Hand zu geben: Argumente, Flyer, Mailkanonen ‚Äì kurz: Propagandamaterial.

Falls Sie sich vorstellen k√∂nnten, dabei zu sein, haben wir eine kleines Formular f√ºr Sie vorbereitet. Es auszuf√ºllen braucht genau eine Minute. Wir w√§ren Ihnen dankbar, wenn Sie sich diese Minute nehmen w√ºrden.

${
  questionnaire && questionnaire.userHasSubmitted ? (
    'Vielen Dank f√ºrs Ausf√ºllen.'
  ) : (
    <Link
      route='questionnaireCrowd'
      params={{ slug: questionnaireCrowdSlug }}
      passHref
    >
      <Button primary>Komplizin werden</Button>
    </Link>
  )
}

## Was wir bisher in der Kampagne erreicht haben:

(Liste wird - hoffentlich regelm√§ssig - aktualisiert)

*   350‚Äô000 Franken von neuen Investoren erhalten. Danke, Luzius Meisser, danke Adrian Gasser, danke Schwyzer-Winiker-Stiftung.
*   185‚Äô000 Franken von Stiftungen erhalten. Danke, Stiftung f√ºr Medienvielfalt, Paul Schiller Stiftung, Volkart Stiftung. 

## Was Sie sofort tun k√∂nnen

*   Falls Sie nur eine Sache tun wollen: Erneuern Sie Ihre Mitgliedschaft! ‚Äì Wenn m√∂glich grossz√ºgig. Wenn m√∂glich jetzt.
*   Oder ‚Äì wenn Sie nicht an Bord sind ‚Äì werden Sie Mitglied der Verlagsetage!
*   Verschenken Sie die Republik, zum Beispiel zu Weihnachten ‚Äì oder unter einem sonstigen Vorwand.
*   Weiter hilft uns, wenn Sie mit Ihren Freunden √ºber uns reden. Oder unsere interessanteren Geschichten mit ihnen teilen. 

So ‚Äì das war's f√ºrs Erste. Wir w√ºrden uns freuen, wenn Sie in den n√§chsten vier Monaten Seite an Seite mit uns k√§mpfen w√ºrden.

Einfach wird das nicht ‚Äì aber das hat auch niemand versprochen.

Aber wir werden guter Laune sein. Und das Unternehmen in einen stabilen Orbit katapultieren.

Wie wir hoffen: mit Ihnen. Wem sonst? 

Denn wir schaffen das nur gemeinsam. Oder gar nicht.

PS: Falls Sie noch **offene Fragen** haben: Wir haben ein rundes Dutzend der wichtigsten hier beantwortet. Falls Sie dort nichts finden, schreiben wir Ihnen gerne zur√ºck: kontakt@republik.ch. 

## Community

## ${lastMonth.active +
                lastMonth.new +
                lastMonth.subscriptionsRenewalPending} sind treu
`}

              <TestimonialList
                membershipAfter={END_DATE}
                ssr={false}
                singleRow
                minColumns={3}
              />
              <br />

              {md(mdComponents)`

[Alle anschauen](/community) ‚Äì [Statement abgeben](/einrichten)

      `}

              <Accordion
                me={me}
                query={query}
                shouldBuyProlong={shouldBuyProlong}
                isReactivating={isReactivating}
                defaultBenefactor={defaultBenefactor}
                questionnaire={questionnaire}
              />
            </>
          )
        }}
      />
    </Frame>
  )
}

const statusQuery = gql`
  query StatusPage {
    revenueStats {
      surplus(min: "2019-11-30T23:00:00Z") {
        total
        updatedAt
      }
    }
    membershipStats {
      evolution(min: "2019-12", max: "2020-03") {
        buckets {
          label
          active
          activeWithDonation
          activeWithoutDonation
          loss
          lossExpired
          lossCancelled
          new
          newWithDonation
          newWithoutDonation
          renewalPending
          subscriptionsRenewalPending
        }
        updatedAt
      }
    }
    questionnaire(slug: "${questionnaireCrowdSlug}") {
      id
      turnout {
        submitted
      }
    }
  }
`

const actionsQuery = gql`
  query StatusPageActions($accessToken: ID) {
    me(accessToken: $accessToken) {
      id
      customPackages {
        options {
          membership {
            id
            user {
              id
            }
            graceEndDate
          }
          defaultAmount
          reward {
            ... on MembershipType {
              name
            }
          }
        }
      }
    }
    questionnaire(slug: "${questionnaireCrowdSlug}") {
      id
      userIsEligible
      userHasSubmitted
    }
  }
`

export default compose(
  withT,
  withMe,
  withRouter,
  graphql(statusQuery, {
    options: {
      pollInterval: +STATUS_POLL_INTERVAL_MS
    }
  }),
  graphql(actionsQuery, {
    props: ({ data: { loading, me, questionnaire } }) => {
      const isOptionWithOwn = o =>
        o.membership && o.membership.user && o.membership.user.id === me.id
      const customPackageWithOwn =
        me &&
        me.customPackages &&
        me.customPackages.find(p => p.options.some(isOptionWithOwn))
      const ownMembership =
        customPackageWithOwn &&
        customPackageWithOwn.options.find(isOptionWithOwn).membership
      return {
        actionsLoading: loading,
        questionnaire,
        canProlongOwn: !!customPackageWithOwn,
        isReactivating:
          ownMembership && new Date(ownMembership.graceEndDate) < new Date(),
        defaultBenefactor:
          !!customPackageWithOwn &&
          me.customPackages.some(p =>
            p.options.some(
              o =>
                isOptionWithOwn(o) &&
                o.defaultAmount === 1 &&
                o.reward.name === 'BENEFACTOR_ABO'
            )
          )
      }
    },
    options: ({ router: { query } }) => ({
      variables: {
        accessToken: query.token
      }
    })
  })
)(Page)
